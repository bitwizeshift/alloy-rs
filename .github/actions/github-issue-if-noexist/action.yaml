name: github-issue-if-noexist
description: "A tool for creating a Github issue if one does not already exist"

inputs:
  title:
    required: true
    description: "The title to use for the issue"
  body:
    required: true
    description: "The body to use to describe the issue"
  label:
    required: true
    description: "The label to use to reference this"
  assignee:
    required: false
    default: ""
    description: "The assignee for the created issue"
  retries:
    required: false
    default: "3"
    description: "The number of times to try retrying"
  retry-exempt-status-codes:
    required: false
    default: "400,401,403,404,422"
    description: "The retry exempt status codes"

runs:
  using: "composite"
  steps:
    - name: Create issue if "${{ inputs.label }}" label does not exist
      uses: actions/github-script@v7
      with:
        retries: ${{ inputs.retries }}
        retry-exempt-status-codes: ${{ inputs.retry-exempt-status-codes }}
        script: |
          const issues = await github.paginate(github.rest.issues.listForRepo, {
            owner: context.repo.owner,
            repo: context.repo.repo,
            labels: `${{ inputs.label }}`,
            state: 'open',
          })
          for (const issue of issues) {
            if (!issue.pull_request) {
              return // Issue already exists
            }
          }

          await github.rest.issues.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            labels: [`${{ inputs.label }}`, 'triage-required'],
            title: `${{ inputs.title }}`,
            body: `${{ inputs.body }}`,
            assignees: [`${{ inputs.assignee }}`],
          })



